<div id="nav">
    <div class="mdui-divider"></div>
    <div class="mdui-bottom-nav">
        <% if (theme.since){ %>
            <a>
                <label>始于 <%- theme.since %></label>
            </a>
        <% } %>
        <a href="https://github.com/LemonNekoGH/material-theme-for-hexo">
            <label>Material-Theme-For-Hexo</label>
        </a>
        <a href="https://hexo.io/zh-cn/">
            <label>由Hexo强力驱动</label>
        </a>
    </div>
</div>
<!--FAB-->
<button class="mdui-fab mdui-fab-fixed mdui-ripple mdui-ripple-black mdui-fab-hide mdui-color-white" id="fab">
    <i class="mdui-icon material-icons">&#xe5d8;</i>
</button>
</div>
<!-- MDUI JavaScript -->
<script
        src="https://cdn.jsdelivr.net/npm/mdui@1.0.0/dist/js/mdui.min.js"
        integrity="sha384-aB8rnkAu/GBsQ1q6dwTySnlrrbhqDwrDnpVHR2Wgm8pWLbwUnzDcIROX3VvCbaK+"
        crossorigin="anonymous"
></script>
<%- js("/js/highlight.pack.js") %>
<script>
    /**
     * 缓冲函数
     * @param {Number} position 当前滚动位置
     * @param {Number} destination 目标位置
     * @param {Number} rate 缓动率
     * @param {Function} callback 缓动结束回调函数 两个参数分别是当前位置和是否结束
     */

    const easeout = function (position, destination, rate, callback) {
        if (position === destination || typeof destination !== 'number') {
            return false;
        }
        destination = destination || 0;
        rate = rate || 2;
        // 不存在原生`requestAnimationFrame`，用`setTimeout`模拟替代
        if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = function (fn) {
                return setTimeout(fn, 17);
            }
        }
        const step = function () {
            position = position + (destination - position) / rate;
            if (Math.abs(destination - position) < 1) {
                callback(destination, true);
                return;
            }
            callback(position, false);
            requestAnimationFrame(step);
        };
        step();
    }

    const scrollTopSmooth = (position) => {
        // 当前滚动高度
        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
        easeout(scrollTop, position, 5, function (val) {
            window.scrollTo(0, val);
        });
    }

    (function () {
        const drawer = new mdui.Drawer("#drawer", {overlay: true});
        drawer.close();

        const drawerToggle = document.querySelector("#drawer-toggle");

        drawerToggle.addEventListener("click", () => drawer.toggle());

        const appbar = document.querySelector("#appbar")

        const fab = document.querySelector("#fab");

        if (fab !== undefined) {
            fab.addEventListener("click", () => {
                scrollTopSmooth(0);
            });
        }

        document.body.onscroll = () => {
            const scrollTop = document.documentElement.scrollTop;
            if (scrollTop >= 0 && scrollTop < 8) {
                for (let i = 0; i <= 8; i++) {
                    appbar.classList.remove("mdui-shadow-" + i)
                }
                appbar.classList.add("mdui-shadow-" + scrollTop)
                if (scrollTop === 0) {
                    appbar.style.background = "none"
                } else {
                    appbar.style.background = "#FFFFFF"
                }
            } else {
                for (let i = 0; i <= 8; i++) {
                    appbar.classList.remove("mdui-shadow-" + i)
                }
                appbar.classList.add("mdui-shadow-8")
                appbar.style.background = "#FFFFFF"
            }

            if (fab !== undefined) {
                if (scrollTop > 250) {
                    fab.classList.remove("mdui-fab-hide");
                } else {
                    fab.classList.add("mdui-fab-hide");
                }
            }
        }
        document.querySelectorAll(".highlight").forEach((element) => {
            const lang = element.classList[1];
            element.querySelectorAll(".code").forEach((codeBlock) => {
                hljs.highlightBlock(codeBlock);
                codeBlock.classList.remove(codeBlock.classList[2]);
                codeBlock.classList.add(lang);
            })
        });
    })();
</script>
</body>
</html>